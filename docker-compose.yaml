version: "3.9"
name: thesis

networks:
  t2_proxy:
    external: true
  thesis_work_network:
    driver: bridge
    name: thesis_work_network

services:
  # TODO: Volume bind training model files
  thesis-work-development:
    image: thesis-work-development:latest
    user: "${PUID}:${PGID}"
    build:
      context: .
      dockerfile: ./docker/Dockerfile
      target: development
      args:
        PUID: ${PUID}
        PGID: ${PGID}
    container_name: thesis-work-dev
    restart: on-failure
    networks:
      - thesis_work_network
    volumes:
      - ./thesis_work:/opt/thesis_work/thesis_work
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  # TODO: Volume bind training model files
  thesis-work-dagster:
    image: thesis-work-development:latest
    user: "${PUID}:${PGID}"
    build:
      context: .
      dockerfile: ./docker/Dockerfile
      target: development
      args:
        PUID: ${PUID}
        PGID: ${PGID}
    container_name: thesis-work-dagster
    command:
      # - "dagster"
      # - "dev"
      - "dagster-webserver"
      - "-h"
      - "0.0.0.0"
      - "-p"
      - "3005"
    restart: on-failure
    networks:
      - t2_proxy
      - thesis_work_network
    # ports:
    #   - "3005:3005"
    # env_file:
    #   - ./.env
    volumes:
      - /home/ilker/dagster_home_thesis:/home/ilker/dagster_home_thesis:rw
      - ./dagster_pipelines:/opt/thesis_work/dagster_pipelines:rw
      - ./thesis_work:/opt/thesis_work/thesis_work:rw
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.thesis-rtr.entrypoints=https"
      - "traefik.http.routers.thesis-rtr.rule=Host(`thesis.$DOMAINNAME`)"
      ## Middlewares
      - "traefik.http.routers.thesis-rtr.middlewares=chain-no-auth@file"
      ## HTTP Services
      - "traefik.http.routers.thesis-rtr.service=thesis-svc"
      - "traefik.http.services.thesis-svc.loadbalancer.server.port=3005"

# TODO: Volume bind training model files
  thesis-work-streamlit:
    image: thesis-work-development:latest
    user: "${PUID}:${PGID}"
    build:
      context: .
      dockerfile: ./docker/Dockerfile
      target: development
      args:
        PUID: ${PUID}
        PGID: ${PGID}
    container_name: thesis-work-streamlit
    command:
      - "streamlit"
      - "run"
      - "thesis_work/gui/index.py"
    restart: on-failure
    networks:
      - thesis_work_network
    ports:
      - "5000:8501"
    volumes:
      - ./thesis_work:/opt/thesis_work/thesis_work
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  thesis-work-production:
    image: thesis-work-production:latest
    build:
      context: .
      dockerfile: ./docker/Dockerfile
      target: production
    container_name: thesis-work-prod
    restart: "no"
    networks:
      - thesis_work_network
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
